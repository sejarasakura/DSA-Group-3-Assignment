/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.59
 * Generated at: 2020-11-22 12:40:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import cilent.pages.EditEntity;

public final class edit_005fentity_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("cilent.pages.EditEntity");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

    EditEntity editEntity = EditEntity.getNewEditEntity(request.getParameter("edit"), request.getParameter("id"));

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response,  main.WebConfig.META_URL + (( main.WebConfig.META_URL).indexOf('?')>0? '&': '?') + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("Apprearance", request.getCharacterEncoding()), out, false);
      out.write("\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response,  main.WebConfig.ADMIN_HEADER_URL + (( main.WebConfig.ADMIN_HEADER_URL).indexOf('?')>0? '&': '?') + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("menu_bar", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("Edit ${param.edit}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null), request.getCharacterEncoding()), out, false);
      out.write("\n");
      out.write("        ");
      out.print( editEntity.getHtml());
      out.write("\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response,  main.WebConfig.ADMIN_FOOTER_URL, out, false);
      out.write("\n");
      out.write("    </body>\n");
      out.write("    <script>\n");
      out.write("        $(document).ready(function () {\n");
      out.write("            var input2 = $(\"<input>\").attr(\"name\", \"edit\").val(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.edit}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\");\n");
      out.write("            $(\".glyphicon-plus\").click(function () {\n");
      out.write("                $.showConfirm({\n");
      out.write("                    title: \"Confirm add\",\n");
      out.write("                    body: \"Do you sure want to add ? \",\n");
      out.write("                    onSubmit: function (result) {\n");
      out.write("                        if (result) {\n");
      out.write("                            var input = $(\"<input>\").attr(\"name\", \"jsp-action\").val(\"add\");\n");
      out.write("                            $('#updateform').append(input);\n");
      out.write("                            $('#updateform').append(input2);\n");
      out.write("                            $('#updateform').submit();\n");
      out.write("                        } else {\n");
      out.write("                        }\n");
      out.write("                    },\n");
      out.write("                    textTrue: \"Add\", Truecls: \"btn btn-success\",\n");
      out.write("                    textFalse: \"No\", Falsecls: \"btn btn-secondary\",\n");
      out.write("                    onDispose: function () {}\n");
      out.write("                });\n");
      out.write("            });\n");
      out.write("            $(\".glyphicon-circle-arrow-up\").click(function () {\n");
      out.write("                $.showConfirm({\n");
      out.write("                    title: \"Confirm update\",\n");
      out.write("                    body: \"Do you sure want to update ? the record is no backup. \",\n");
      out.write("                    onSubmit: function (result) {\n");
      out.write("                        if (result) {\n");
      out.write("                            var input3 = $(\"<input>\").attr(\"name\", \"jsp-action\").val(\"update\");\n");
      out.write("                            var input = $(\"<input>\").attr(\"name\", \"id\").val(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\");\n");
      out.write("                            $('#updateform').append(input);\n");
      out.write("                            $('#updateform').append(input2);\n");
      out.write("                            $('#updateform').append(input3);\n");
      out.write("                            $('#updateform').submit();\n");
      out.write("                        } else {\n");
      out.write("                        }\n");
      out.write("                    },\n");
      out.write("                    textTrue: \"Update\", Truecls: \"btn btn-warning\",\n");
      out.write("                    textFalse: \"No\", Falsecls: \"btn btn-secondary\",\n");
      out.write("                    onDispose: function () {}\n");
      out.write("                });\n");
      out.write("            });\n");
      out.write("            $(\".glyphicon-trash\").click(function () {\n");
      out.write("                $.showConfirm({\n");
      out.write("                    title: \"Please confirm\",\n");
      out.write("                    body: \"Do you sure want to delete ? the record is no backup. \",\n");
      out.write("                    onSubmit: function (result) {\n");
      out.write("                        if (result) {\n");
      out.write("                            var input = $(\"<input>\").attr(\"name\", \"jsp-action\").val(\"add\");\n");
      out.write("                            $('#updateform').append(input);\n");
      out.write("                            $('#updateform').append(input2);\n");
      out.write("                            $('#updateform').submit();\n");
      out.write("                        } else {\n");
      out.write("                        }\n");
      out.write("                    },\n");
      out.write("                    textTrue: \"Delete\", Truecls: \"btn btn-danger\",\n");
      out.write("                    textFalse: \"No\", Falsecls: \"btn btn-secondary\",\n");
      out.write("                    onDispose: function () {}\n");
      out.write("                });\n");
      out.write("            });\n");
      out.write("            $('#dtBasicExample').DataTable({\n");
      out.write("                \"scrollX\": true,\n");
      out.write("                \"fixedColumns\": {\n");
      out.write("                    leftColumns: 1\n");
      out.write("                },\n");
      out.write("                \"fixedRows\": {\n");
      out.write("                    topColumns: 1\n");
      out.write("                },\n");
      out.write("                \"orderFixed\": [0, 'asc'],\n");
      out.write("            });\n");
      out.write("            $('.dataTables_length').addClass('bs-select');\n");
      out.write("        });\n");
      out.write("    </script>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
